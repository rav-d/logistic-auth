{
  "version": "48.0.0",
  "artifacts": {
    "TirBrowserAuthResourcesStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "TirBrowserAuthResourcesStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "TirBrowserAuthResourcesStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://140729424382/eu-central-1",
      "properties": {
        "templateFile": "TirBrowserAuthResourcesStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Service": "auth"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-deploy-role-140729424382-eu-central-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-cfn-exec-role-140729424382-eu-central-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-140729424382-eu-central-1/0c73e00a17998ee98d9ab71e4945866a0dceaa852e5c1ec4d5e24c40dc70bf06.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "TirBrowserAuthResourcesStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-lookup-role-140729424382-eu-central-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "TirBrowserAuthResourcesStack.assets"
      ],
      "metadata": {
        "/TirBrowserAuthResourcesStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Service",
                "Value": "auth"
              }
            ]
          }
        ],
        "/TirBrowserAuthResourcesStack/TirAuthMainTable": [
          {
            "type": "aws:cdk:hasPhysicalName",
            "data": {
              "Ref": "TirAuthMainTable04F4B9B2"
            }
          }
        ],
        "/TirBrowserAuthResourcesStack/TirAuthMainTable/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthMainTable04F4B9B2"
          }
        ],
        "/TirBrowserAuthResourcesStack/TirAuthTableName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthTableName"
          }
        ],
        "/TirBrowserAuthResourcesStack/TirAuthTableArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthTableArn"
          }
        ],
        "/TirBrowserAuthResourcesStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/TirBrowserAuthResourcesStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/TirBrowserAuthResourcesStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "TirBrowserAuthResourcesStack"
    },
    "TirBrowserAuthStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "TirBrowserAuthStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "TirBrowserAuthStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://140729424382/eu-central-1",
      "properties": {
        "templateFile": "TirBrowserAuthStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-deploy-role-140729424382-eu-central-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-cfn-exec-role-140729424382-eu-central-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-140729424382-eu-central-1/38c167cee1c209d1f0ebe01f37d7b6ea2b2c0e878832868997fa53b909a407c8.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "TirBrowserAuthStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-lookup-role-140729424382-eu-central-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "TirBrowserAuthResourcesStack",
        "TirBrowserAuthStack.assets"
      ],
      "metadata": {
        "/TirBrowserAuthStack": [
          {
            "type": "aws:cdk:error",
            "data": "You are not authorized to perform this operation. User: arn:aws:iam::140729424382:user/tir-browser/tir-browser-auth-developer is not authorized to perform: ec2:DescribeAvailabilityZones because no identity-based policy allows the ec2:DescribeAvailabilityZones action",
            "trace": [
              "Annotations.addMessage (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:1978)",
              "Annotations.addError (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:1440)",
              "Function.getValue (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\context-provider.js:2:1771)",
              "TirBrowserAuthStack.get availabilityZones [as availabilityZones] (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\stack.js:1:11114)",
              "new Vpc2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\aws-ec2\\lib\\vpc.js:1:13827)",
              "new Vpc2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\prop-injectable.js:1:488)",
              "new TirBrowserAuthStack (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\stacks\\auth-stack.ts:22:17)",
              "Object.<anonymous> (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\app.ts:19:19)",
              "Module._compile (node:internal/modules/cjs/loader:1378:14)",
              "Module.m._compile (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\index.ts:1618:23)",
              "Module._extensions..js (node:internal/modules/cjs/loader:1437:10)",
              "Object.require.extensions.<computed> [as .ts] (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1212:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1028:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)",
              "phase4 (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:649:14)",
              "bootstrap (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:95:10)",
              "main (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:55:10)",
              "Object.<anonymous> (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1378:14)",
              "Object.Module._extensions..js (node:internal/modules/cjs/loader:1437:10)",
              "Module.load (node:internal/modules/cjs/loader:1212:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1028:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)",
              "node:internal/main/run_main_module:28:49"
            ]
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPC1E699ECF"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet1Subnet87CFB5A3"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet1RouteTable01EB3A64"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet1RouteTableAssociationBF4D41ED"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet1DefaultRoute2C760E4D"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet1EIPA3E962A4"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet1NATGateway69C816F2"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet2SubnetA464ECEF"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet2RouteTable6CED4B29"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet2RouteTableAssociation12A6DC2D"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPublicSubnet2DefaultRoute552C4B0B"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet1Subnet38BA124D"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet1RouteTable997A7144"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet1RouteTableAssociation5E82F2EF"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet1DefaultRouteADD27440"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet2Subnet2812A404"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet2RouteTable175D8D3B"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet2RouteTableAssociationC7B50BDA"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCPrivateSubnet2DefaultRoute2B238246"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCIGWDA1F72B2"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCVPCGW61B8D119"
          }
        ],
        "/TirBrowserAuthStack/TirAuthVPC/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthVPCRestrictDefaultSecurityGroupCustomResource31D9E878"
          }
        ],
        "/TirBrowserAuthStack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/TirBrowserAuthStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/TirBrowserAuthStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/TirBrowserAuthStack/TirAuthUserPool/smsRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthUserPoolsmsRole818222D8"
          }
        ],
        "/TirBrowserAuthStack/TirAuthUserPool/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthUserPool92887B37"
          }
        ],
        "/TirBrowserAuthStack/TirAuthClient/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthClient4C59E1FC"
          }
        ],
        "/TirBrowserAuthStack/TirAuthCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthCluster37BBB4DF"
          }
        ],
        "/TirBrowserAuthStack/TirAuthTaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthTaskRole4258E97F"
          }
        ],
        "/TirBrowserAuthStack/TirAuthTaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthTaskRoleDefaultPolicy7C259689"
          }
        ],
        "/TirBrowserAuthStack/TirAuthExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthExecutionRole0520287D"
          }
        ],
        "/TirBrowserAuthStack/TirAuthExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthExecutionRoleDefaultPolicy5CA8C2A6"
          }
        ],
        "/TirBrowserAuthStack/TirAuthTask/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthTask47836614"
          }
        ],
        "/TirBrowserAuthStack/TirAuthTask/TirAuthContainer/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthTaskTirAuthContainerLogGroupF17C8AE1"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/LB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceLB6AEB9B6D"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/LB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceLBSecurityGroup6D074D3D"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/LB/SecurityGroup/to TirBrowserAuthStackTirAuthServiceSecurityGroupACBF08D3:3000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceLBSecurityGrouptoTirBrowserAuthStackTirAuthServiceSecurityGroupACBF08D3300005B41B51"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/LB/PublicListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceLBPublicListenerD9BA5DF0"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/LB/PublicListener/ECSGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceLBPublicListenerECSGroup6318A264"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceLoadBalancerDNS4901B5F8"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/ServiceURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceServiceURL5A2821CD"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:1978)",
              "Annotations.addWarningV2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\annotations.js:1:896)",
              "new BaseService (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\aws-ecs\\lib\\base\\base-service.js:1:8201)",
              "new FargateService2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\aws-ecs\\lib\\fargate\\fargate-service.js:1:3888)",
              "new FargateService2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\prop-injectable.js:1:488)",
              "new ApplicationLoadBalancedFargateService2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\aws-ecs-patterns\\lib\\fargate\\application-load-balanced-fargate-service.js:1:4035)",
              "new ApplicationLoadBalancedFargateService2 (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\node_modules\\aws-cdk-lib\\core\\lib\\prop-injectable.js:1:488)",
              "new TirBrowserAuthStack (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\stacks\\auth-stack.ts:145:40)",
              "Object.<anonymous> (C:\\Users\\TalibAllauddin\\Desktop\\logistic-auth\\cdk\\app.ts:19:19)",
              "Module._compile (node:internal/modules/cjs/loader:1378:14)",
              "Module.m._compile (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\index.ts:1618:23)",
              "Module._extensions..js (node:internal/modules/cjs/loader:1437:10)",
              "Object.require.extensions.<computed> [as .ts] (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1212:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1028:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)",
              "phase4 (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:649:14)",
              "bootstrap (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:95:10)",
              "main (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:55:10)",
              "Object.<anonymous> (C:\\Users\\TalibAllauddin\\AppData\\Local\\npm-cache\\_npx\\1bf7c3c15bf47d04\\node_modules\\ts-node\\src\\bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1378:14)",
              "Object.Module._extensions..js (node:internal/modules/cjs/loader:1437:10)",
              "Module.load (node:internal/modules/cjs/loader:1212:32)",
              "Function.Module._load (node:internal/modules/cjs/loader:1028:12)",
              "Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:142:12)",
              "node:internal/main/run_main_module:28:49"
            ]
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthService19088DD5"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceSecurityGroup12DC18B2"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service/SecurityGroup/from TirBrowserAuthStackTirAuthServiceLBSecurityGroupA77B771E:3000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceSecurityGroupfromTirBrowserAuthStackTirAuthServiceLBSecurityGroupA77B771E3000223EAF2B"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service/TaskCount/Target/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceTaskCountTarget9A5D7E9B"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service/TaskCount/Target/CpuScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceTaskCountTargetCpuScaling40E6CBCD"
          }
        ],
        "/TirBrowserAuthStack/TirAuthService/Service/TaskCount/Target/MemoryScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TirAuthServiceTaskCountTargetMemoryScaling0F5275DD"
          }
        ],
        "/TirBrowserAuthStack/UserPoolId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolId"
          }
        ],
        "/TirBrowserAuthStack/UserPoolClientId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPoolClientId"
          }
        ],
        "/TirBrowserAuthStack/ServiceURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceURL"
          }
        ],
        "/TirBrowserAuthStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/TirBrowserAuthStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/TirBrowserAuthStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "TirBrowserAuthStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs.",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          }
        }
      }
    }
  },
  "missing": [
    {
      "key": "availability-zones:account=140729424382:region=eu-central-1",
      "provider": "availability-zones",
      "props": {
        "dummyValue": [
          "dummy1a",
          "dummy1b",
          "dummy1c"
        ],
        "account": "140729424382",
        "region": "eu-central-1",
        "lookupRoleArn": "arn:${AWS::Partition}:iam::140729424382:role/cdk-hnb659fds-lookup-role-140729424382-eu-central-1"
      }
    }
  ],
  "minimumCliVersion": "2.1024.0"
}