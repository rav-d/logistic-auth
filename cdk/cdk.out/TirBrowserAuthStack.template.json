{
 "Description": "TIR Browser Auth Stack - Cognito User Pool",
 "Resources": {
  "TirAuthVPC1E699ECF": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/Resource"
   }
  },
  "TirAuthVPCPublicSubnet1Subnet87CFB5A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/Subnet"
   }
  },
  "TirAuthVPCPublicSubnet1RouteTable01EB3A64": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/RouteTable"
   }
  },
  "TirAuthVPCPublicSubnet1RouteTableAssociationBF4D41ED": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TirAuthVPCPublicSubnet1RouteTable01EB3A64"
    },
    "SubnetId": {
     "Ref": "TirAuthVPCPublicSubnet1Subnet87CFB5A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "TirAuthVPCPublicSubnet1DefaultRoute2C760E4D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "TirAuthVPCIGWDA1F72B2"
    },
    "RouteTableId": {
     "Ref": "TirAuthVPCPublicSubnet1RouteTable01EB3A64"
    }
   },
   "DependsOn": [
    "TirAuthVPCVPCGW61B8D119"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "TirAuthVPCPublicSubnet1EIPA3E962A4": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/EIP"
   }
  },
  "TirAuthVPCPublicSubnet1NATGateway69C816F2": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "TirAuthVPCPublicSubnet1EIPA3E962A4",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "TirAuthVPCPublicSubnet1Subnet87CFB5A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "TirAuthVPCPublicSubnet1DefaultRoute2C760E4D",
    "TirAuthVPCPublicSubnet1RouteTableAssociationBF4D41ED"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet1/NATGateway"
   }
  },
  "TirAuthVPCPublicSubnet2SubnetA464ECEF": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/Subnet"
   }
  },
  "TirAuthVPCPublicSubnet2RouteTable6CED4B29": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/RouteTable"
   }
  },
  "TirAuthVPCPublicSubnet2RouteTableAssociation12A6DC2D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TirAuthVPCPublicSubnet2RouteTable6CED4B29"
    },
    "SubnetId": {
     "Ref": "TirAuthVPCPublicSubnet2SubnetA464ECEF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "TirAuthVPCPublicSubnet2DefaultRoute552C4B0B": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "TirAuthVPCIGWDA1F72B2"
    },
    "RouteTableId": {
     "Ref": "TirAuthVPCPublicSubnet2RouteTable6CED4B29"
    }
   },
   "DependsOn": [
    "TirAuthVPCVPCGW61B8D119"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "TirAuthVPCPrivateSubnet1Subnet38BA124D": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/Subnet"
   }
  },
  "TirAuthVPCPrivateSubnet1RouteTable997A7144": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/RouteTable"
   }
  },
  "TirAuthVPCPrivateSubnet1RouteTableAssociation5E82F2EF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TirAuthVPCPrivateSubnet1RouteTable997A7144"
    },
    "SubnetId": {
     "Ref": "TirAuthVPCPrivateSubnet1Subnet38BA124D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "TirAuthVPCPrivateSubnet1DefaultRouteADD27440": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "TirAuthVPCPublicSubnet1NATGateway69C816F2"
    },
    "RouteTableId": {
     "Ref": "TirAuthVPCPrivateSubnet1RouteTable997A7144"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "TirAuthVPCPrivateSubnet2Subnet2812A404": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/Subnet"
   }
  },
  "TirAuthVPCPrivateSubnet2RouteTable175D8D3B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/RouteTable"
   }
  },
  "TirAuthVPCPrivateSubnet2RouteTableAssociationC7B50BDA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TirAuthVPCPrivateSubnet2RouteTable175D8D3B"
    },
    "SubnetId": {
     "Ref": "TirAuthVPCPrivateSubnet2Subnet2812A404"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "TirAuthVPCPrivateSubnet2DefaultRoute2B238246": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "TirAuthVPCPublicSubnet1NATGateway69C816F2"
    },
    "RouteTableId": {
     "Ref": "TirAuthVPCPrivateSubnet2RouteTable175D8D3B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "TirAuthVPCIGWDA1F72B2": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TirBrowserAuthStack/TirAuthVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/IGW"
   }
  },
  "TirAuthVPCVPCGW61B8D119": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "TirAuthVPCIGWDA1F72B2"
    },
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/VPCGW"
   }
  },
  "TirAuthVPCRestrictDefaultSecurityGroupCustomResource31D9E878": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "TirAuthVPC1E699ECF",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "140729424382"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:eu-central-1:140729424382:security-group/",
             {
              "Fn::GetAtt": [
               "TirAuthVPC1E699ECF",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-140729424382-eu-central-1",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "TirAuthUserPoolsmsRole818222D8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "StringEquals": {
         "sts:ExternalId": "TirBrowserAuthStackTirAuthUserPool09B0CE8A"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cognito-idp.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "sns:Publish",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "sns-publish"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthUserPool/smsRole/Resource"
   }
  },
  "TirAuthUserPool92887B37": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailConfiguration": {
     "EmailSendingAccount": "COGNITO_DEFAULT",
     "ReplyToEmailAddress": "noreply@tir-browser.com"
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "EnabledMfas": [
     "SMS_MFA",
     "SOFTWARE_TOKEN_MFA"
    ],
    "MfaConfiguration": "OPTIONAL",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": true,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "given_name",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "family_name",
      "Required": true
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "userType"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "country"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "companyId"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "driverId"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "providerId"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "businessVerification"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "licenseNumber"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "employeeId"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "department"
     },
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "accessLevel"
     }
    ],
    "SmsConfiguration": {
     "ExternalId": "TirBrowserAuthStackTirAuthUserPool09B0CE8A",
     "SnsCallerArn": {
      "Fn::GetAtt": [
       "TirAuthUserPoolsmsRole818222D8",
       "Arn"
      ]
     }
    },
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "tir-browser-auth-users",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthUserPool/Resource"
   }
  },
  "TirAuthClient4C59E1FC": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "email",
     "openid",
     "profile"
    ],
    "CallbackURLs": [
     "http://localhost:3000/callback"
    ],
    "ClientName": "tir-browser-auth-client",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_ADMIN_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": false,
    "LogoutURLs": [
     "http://localhost:3000/logout"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "TirAuthUserPool92887B37"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthClient/Resource"
   }
  },
  "TirAuthCluster37BBB4DF": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "tir-browser-auth-cluster"
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthCluster/Resource"
   }
  },
  "TirAuthTaskRole4258E97F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthTaskRole/Resource"
   }
  },
  "TirAuthTaskRoleDefaultPolicy7C259689": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "TirAuthTableArn"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "TirAuthTableArn"
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminConfirmSignUp",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetDevice",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminListUsers",
        "cognito-idp:AdminRespondToAuthChallenge",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:DescribeUserPool",
        "cognito-idp:DescribeUserPoolClient",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TirAuthUserPool92887B37",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TirAuthTaskRoleDefaultPolicy7C259689",
    "Roles": [
     {
      "Ref": "TirAuthTaskRole4258E97F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthTaskRole/DefaultPolicy/Resource"
   }
  },
  "TirAuthExecutionRole0520287D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthExecutionRole/Resource"
   }
  },
  "TirAuthExecutionRoleDefaultPolicy5CA8C2A6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TirAuthTaskTirAuthContainerLogGroupF17C8AE1",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TirAuthExecutionRoleDefaultPolicy5CA8C2A6",
    "Roles": [
     {
      "Ref": "TirAuthExecutionRole0520287D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthExecutionRole/DefaultPolicy/Resource"
   }
  },
  "TirAuthTask47836614": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "NODE_ENV",
        "Value": "production"
       },
       {
        "Name": "DYNAMO_TABLE_NAME",
        "Value": {
         "Fn::ImportValue": "TirAuthTableName"
        }
       },
       {
        "Name": "COGNITO_USER_POOL_ID",
        "Value": {
         "Ref": "TirAuthUserPool92887B37"
        }
       },
       {
        "Name": "COGNITO_CLIENT_ID",
        "Value": {
         "Ref": "TirAuthClient4C59E1FC"
        }
       },
       {
        "Name": "AWS_REGION",
        "Value": "eu-central-1"
       },
       {
        "Name": "LOG_LEVEL",
        "Value": "info"
       },
       {
        "Name": "SERVICE_VERSION",
        "Value": "1.0.0"
       }
      ],
      "Essential": true,
      "Image": "tir-browser-auth:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "TirAuthTaskTirAuthContainerLogGroupF17C8AE1"
        },
        "awslogs-stream-prefix": "tir-browser-auth",
        "awslogs-region": "eu-central-1"
       }
      },
      "Name": "tir-browser-auth",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "TirAuthExecutionRole0520287D",
      "Arn"
     ]
    },
    "Family": "TirBrowserAuthStackTirAuthTask574AC60E",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TirAuthTaskRole4258E97F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthTask/Resource"
   }
  },
  "TirAuthTaskTirAuthContainerLogGroupF17C8AE1": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthTask/TirAuthContainer/LogGroup/Resource"
   }
  },
  "TirAuthServiceLB6AEB9B6D": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "TirAuthServiceLBSecurityGroup6D074D3D",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "TirAuthVPCPublicSubnet1Subnet87CFB5A3"
     },
     {
      "Ref": "TirAuthVPCPublicSubnet2SubnetA464ECEF"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "TirAuthVPCPublicSubnet1DefaultRoute2C760E4D",
    "TirAuthVPCPublicSubnet1RouteTableAssociationBF4D41ED",
    "TirAuthVPCPublicSubnet2DefaultRoute552C4B0B",
    "TirAuthVPCPublicSubnet2RouteTableAssociation12A6DC2D"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/LB/Resource"
   }
  },
  "TirAuthServiceLBSecurityGroup6D074D3D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB TirBrowserAuthStackTirAuthServiceLBEDF35CC8",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/LB/SecurityGroup/Resource"
   }
  },
  "TirAuthServiceLBSecurityGrouptoTirBrowserAuthStackTirAuthServiceSecurityGroupACBF08D3300005B41B51": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "TirAuthServiceSecurityGroup12DC18B2",
      "GroupId"
     ]
    },
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "TirAuthServiceLBSecurityGroup6D074D3D",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/LB/SecurityGroup/to TirBrowserAuthStackTirAuthServiceSecurityGroupACBF08D3:3000"
   }
  },
  "TirAuthServiceLBPublicListenerD9BA5DF0": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "TirAuthServiceLBPublicListenerECSGroup6318A264"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "TirAuthServiceLB6AEB9B6D"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/LB/PublicListener/Resource"
   }
  },
  "TirAuthServiceLBPublicListenerECSGroup6318A264": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "TirAuthService19088DD5": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "TirAuthCluster37BBB4DF"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 2,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "tir-browser-auth",
      "ContainerPort": 3000,
      "TargetGroupArn": {
       "Ref": "TirAuthServiceLBPublicListenerECSGroup6318A264"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "TirAuthServiceSecurityGroup12DC18B2",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "TirAuthVPCPrivateSubnet1Subnet38BA124D"
       },
       {
        "Ref": "TirAuthVPCPrivateSubnet2Subnet2812A404"
       }
      ]
     }
    },
    "ServiceName": "tir-browser-auth-service",
    "TaskDefinition": {
     "Ref": "TirAuthTask47836614"
    }
   },
   "DependsOn": [
    "TirAuthServiceLBPublicListenerECSGroup6318A264",
    "TirAuthServiceLBPublicListenerD9BA5DF0",
    "TirAuthTaskRoleDefaultPolicy7C259689",
    "TirAuthTaskRole4258E97F"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/Service/Service"
   }
  },
  "TirAuthServiceSecurityGroup12DC18B2": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TirBrowserAuthStack/TirAuthService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "TirAuthVPC1E699ECF"
    }
   },
   "DependsOn": [
    "TirAuthTaskRoleDefaultPolicy7C259689",
    "TirAuthTaskRole4258E97F"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/Service/SecurityGroup/Resource"
   }
  },
  "TirAuthServiceSecurityGroupfromTirBrowserAuthStackTirAuthServiceLBSecurityGroupA77B771E3000223EAF2B": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "TirAuthServiceSecurityGroup12DC18B2",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "TirAuthServiceLBSecurityGroup6D074D3D",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "DependsOn": [
    "TirAuthTaskRoleDefaultPolicy7C259689",
    "TirAuthTaskRole4258E97F"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/Service/SecurityGroup/from TirBrowserAuthStackTirAuthServiceLBSecurityGroupA77B771E:3000"
   }
  },
  "TirAuthServiceTaskCountTarget9A5D7E9B": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 2,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "TirAuthCluster37BBB4DF"
       },
       "/",
       {
        "Fn::GetAtt": [
         "TirAuthService19088DD5",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": "arn:aws:iam::140729424382:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "TirAuthTaskRoleDefaultPolicy7C259689",
    "TirAuthTaskRole4258E97F"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/Service/TaskCount/Target/Resource"
   }
  },
  "TirAuthServiceTaskCountTargetCpuScaling40E6CBCD": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "TirBrowserAuthStackTirAuthServiceTaskCountTargetCpuScaling1B59AAE8",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "TirAuthServiceTaskCountTarget9A5D7E9B"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 70
    }
   },
   "DependsOn": [
    "TirAuthTaskRoleDefaultPolicy7C259689",
    "TirAuthTaskRole4258E97F"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/Service/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "TirAuthServiceTaskCountTargetMemoryScaling0F5275DD": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "TirBrowserAuthStackTirAuthServiceTaskCountTargetMemoryScaling43ED0928",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "TirAuthServiceTaskCountTarget9A5D7E9B"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 70
    }
   },
   "DependsOn": [
    "TirAuthTaskRoleDefaultPolicy7C259689",
    "TirAuthTaskRole4258E97F"
   ],
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/TirAuthService/Service/TaskCount/Target/MemoryScaling/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RXW/bMAz8LX1XtMYPfU+zrghQbEac9bVgZEZjo0iGSCUoDP/3QXYSux/bE4+no3g4FrqY3+rbGzjxzNT7maOtbisBs1dw4pcWTaHb58ao5c4/l0tVpq0jU6WtR8nciNYhCW5g63DkR27BHAyBUPBXcQYPqzKXnyCPIHiCN1VGOoLg+PHKC0aPV8Hg5NwtRMD8OaAXVaFJkeTtMYbU9B7+SzzYiMyf6JXv+U6ZYD1J0O1vxliG4LL0ii9g6SjvnjwNTKcIDrpdhyGOvpbBken9D6hTaFi3S5dYMGb+An9AtJCT4/133JGnS24fmeAFyGOccOfZCuORzHCLM6wMuHyL/MkypGzSBcu6fQr2mtEF9+ZeGpAcPutF0zgy/f2eAtT34MAbrD8sQwcsZFyAetsryNtjoduvp+Owb9JPdcSC/qy54Mn7BqJFudqetJ2CUQZJAhtw5K1uxwCyuI/mPTOUTQSzJ2+rYW482zui69QaOaSYQ04s4TC2O/+PpzKGI9UY74FRLZhRKgFL3uaZX0maJJ3yoUb9yt+OxVzf6fnNKxPNYvJCB9Trof4FhsNBdrgDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "TirBrowserAuthStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "TirAuthServiceLoadBalancerDNS4901B5F8": {
   "Value": {
    "Fn::GetAtt": [
     "TirAuthServiceLB6AEB9B6D",
     "DNSName"
    ]
   }
  },
  "TirAuthServiceServiceURL5A2821CD": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "TirAuthServiceLB6AEB9B6D",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "UserPoolId": {
   "Description": "Cognito User Pool ID",
   "Value": {
    "Ref": "TirAuthUserPool92887B37"
   },
   "Export": {
    "Name": "TirAuthUserPoolId"
   }
  },
  "UserPoolClientId": {
   "Description": "Cognito User Pool Client ID",
   "Value": {
    "Ref": "TirAuthClient4C59E1FC"
   },
   "Export": {
    "Name": "TirAuthUserPoolClientId"
   }
  },
  "ServiceURL": {
   "Description": "URL of the TIR Browser Auth Service",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "TirAuthServiceLB6AEB9B6D",
        "DNSName"
       ]
      }
     ]
    ]
   },
   "Export": {
    "Name": "TirAuthServiceURL"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}